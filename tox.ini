[tox]
isolated_build = true

[toxenv]
package = editable
wheel_build_env = .pkg

[testenv]
deps =
  pytest
commands =
  {envpython} -Im pytest {posargs:}


[testenv:build-dists]
description =
  Build dists with {basepython} and put them into the dist{/} folder
deps =
  build ~= 1.2.1
commands =
  {envpython} -c \
    "import shutil; \
    shutil.rmtree('{toxinidir}{/}dist{/}', ignore_errors=True)"

  {envpython} -m build {posargs:}
package = skip


[testenv:pre-commit]
description = Run the quality checks under {basepython}
commands =
  {envpython} -Im \
    pre_commit run \
    --show-diff-on-failure \
    {posargs:--all-files}

  # Print out the advice on how to install pre-commit from this env into Git:
  -{envpython} -c \
  'cmd = "{envpython} -m pre_commit install"; \
    scr_width = len(cmd) + 10; \
    sep = "=" * scr_width; \
    cmd_str = "    $ \{cmd\}";' \
    'print(f"\n\{sep\}\nTo install pre-commit hooks into the Git repo, run:\n\n\{cmd_str\}\n\n\{sep\}\n")'
deps =
  pre-commit >= 2.6.0
isolated_build = true
package = skip


[testenv:docs]
deps =
  -r{toxinidir}/docs/requirements.in
  -c{toxinidir}/docs/requirements.txt
changedir = docs{/}
commands =
  {envpython} -Im sphinx \
    -b html \
    -n -W --keep-going \
    -d {temp_dir}{/}.doctrees \
    . \
    {posargs:{envtmpdir}/html}
package = skip  # if we need to retrieve the project version and render it in the docs, this will need to be changed
