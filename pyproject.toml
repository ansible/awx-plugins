[build-system]
requires = [
  "setuptools >= 64",
  "setuptools-scm >= 8",
]
build-backend = "setuptools.build_meta"

[project]
name = "awx-plugins-core"  # import awx_plugins.credentials.x, awx_plugins.credentials.y
# name = "awx_plugins.credentials.x"  # import awx_plugins.credentials.x
# name = "awx_plugins.credentials.y"  # import awx_plugins.credentials.y
# version =
dependencies = [  # runtime deps  # https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#dependencies-optional-dependencies
  # GUIDANCE: only add things that this project imports directly
  # GUIDANCE: only set lower version bounds
  # "awx_plugins.base_interface.api",  # keep `__init__.py` empty
]
dynamic = [
  "version",  # let `setuptools-scm` populate this
]

# Example entry point declarations:
# * https://github.com/ansible/awx/blob/cb2ad41/setup.cfg#L16-L25
# * https://github.com/pytest-dev/pytest-xdist/blob/master/pyproject.toml#L48-L50
# * https://github.com/ansible-community/ansible-pygments/blob/2ffb109/pyproject.toml#L29-L35
# * https://github.com/ansible-community/sphinx_ansible_theme/blob/645f414/pyproject.toml#L53-L54
# awx calls `importlib.metadata.entry_points(group='awx_plugins.credentials')` to discover and later enable any plugins present in the same env
# TODO: consider using https://pluggy.rtfd.io
#
# PLUGIN ACTIVATION GUIDANCE (UX):
# `pip install awx_plugins.credentials.x`  would auto-activate any plugins the packaged project ships
[project.entry-points."awx_plugins.credentials"]  # new entry points group name
conjur = "awx_plugins.credentials.conjur:conjur_plugin"
hashivault_kv = "awx_plugins.credentials.hashivault:hashivault_kv_plugin"
hashivault_ssh = "awx_plugins.credentials.hashivault:hashivault_ssh_plugin"
azure_kv = "awx_plugins.credentials.azure_kv:azure_keyvault_plugin"
aim = "awx_plugins.credentials.aim:aim_plugin"
centrify_vault_kv = "awx_plugins.credentials.centrify_vault:centrify_plugin"
thycotic_dsv = "awx_plugins.credentials.dsv:dsv_plugin"
thycotic_tss = "awx_plugins.credentials.tss:tss_plugin"
aws_secretsmanager_credential = "awx_plugins.credentials.aws_secretsmanager:aws_secretmanager_plugin"

[tool.setuptools_scm]  # this section presence is a feature-flag to activate `setuptools-scm`
